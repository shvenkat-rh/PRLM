[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prlm"
version = "1.0.0"
description = "Enterprise-grade GitHub Pull Request analysis with AI-powered insights and professional GUI"
readme = "README.md"
license = "MIT"
authors = [
    {name = "PR Analyzer", email = "contact@example.com"}
]
maintainers = [
    {name = "PR Analyzer", email = "contact@example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Quality Assurance",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: Streamlit",
]
keywords = [
    "github", "pull-request", "analysis", "ai", "streamlit", 
    "code-review", "developer-tools", "automation", "llm"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "PyGithub>=1.59.1",
    "python-docx>=0.8.11",
    "repomix>=0.2.0",
    "ollama>=0.1.9",
    "python-dotenv>=1.0.0",
    "click>=8.1.7",
    "tqdm>=4.66.1",
    "rich>=13.7.0",
    "markdown>=3.5.1",
    "beautifulsoup4>=4.12.2",
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "pandas>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/shvenkat-rh/PRLM"
Repository = "https://github.com/shvenkat-rh/PRLM.git"
Issues = "https://github.com/shvenkat-rh/PRLM/issues"
Changelog = "https://github.com/shvenkat-rh/PRLM/releases"

[project.scripts]
prlm = "pr_analyzer.main:cli"
prlm-gui = "pr_analyzer.run_gui:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["pr_analyzer*"]

[tool.setuptools.package-data]
pr_analyzer = ["*.yaml", "*.yml", "*.json", "*.css", "*.js", "*.html"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=pr_analyzer --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "plotly.*",
    "ollama.*",
    "repomix.*",
]
ignore_missing_imports = true 